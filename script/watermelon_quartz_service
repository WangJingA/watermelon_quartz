spring:
  datasource:
    url: jdbc:mysql://127.0.0.1:3308/watermelon_quartz?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
  quartz:
    # 任务存储类型
    job-store-type: jdbc
    # 关闭时等待任务完成
    wait-for-jobs-to-complete-on-shutdown: false
    # 是否覆盖已有的任务
    overwrite-existing-jobs: true
    # 是否自动启动计划程序
    auto-startup: true
    # 延迟启动
    startup-delay: 0s
    jdbc:
      # 数据库架构初始化模式（never：从不进行初始化；always：每次都清空数据库进行初始化；embedded：只初始化内存数据库（默认值））
      initialize-schema: never
    # 相关属性配置
    properties:
      org:
        quartz:
          scheduler:
            # 调度器实例名称
            instanceName: QuartzScheduler
            # 分布式节点ID自动生成
            instanceId: AUTO
          jobStore:
            class: org.springframework.scheduling.quartz.LocalDataSourceJobStore
            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
            # 表前缀
            tablePrefix: QRTZ_
            # 是否开启集群
            isClustered: false
            # 数据源别名（自定义）
            dataSource: watermelon_quartz
            # 分布式节点有效性检查时间间隔（毫秒）
            clusterCheckinInterval: 10000
            useProperties: true
          # 线程池配置
          threadPool:
            class: org.quartz.simpl.SimpleThreadPool
            threadCount: 60
            threadPriority: 5
            #是否继承初始化线程的上下文类加载器
            threadsInheritContextClassLoaderOfInitializingThread: true
  application:
    name: watermelon-quartz-service
mybatis:
  #开启驼峰命名
  configuration:
    map-underscore-to-camel-case: true
  type-aliases-package: org.com.watermelon.watermelon_quartz.entity.po
  mapper-locations: classpath*:/mapper/**.xml
logging:
  level:
    org.com.watermelon.watermelon_quartz.mapper: info
server:
  port: 8808